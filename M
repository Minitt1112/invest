##  simulate returns 
# data <- mvrnorm(252,mu = c(0.05,0.1),Sigma = matrix(c(0.01,0,0,0.01),ncol = 2))

# install.packages('BatchGetSymbols')
library(BatchGetSymbols)

# set dates
first.date <- Sys.Date() - 60
last.date <- Sys.Date()
freq.data <- 'daily'
# set tickers
tickers <- c('FB','MMM','AAPL')

l.out <- BatchGetSymbols(tickers = tickers, 
                         first.date = first.date,
                         last.date = last.date, 
                         freq.data = freq.data,
                         do.cache=FALSE ) # cache in tempdir()
# output
print(l.out$df.control)
prices = l.out$df.tickers
# plot prices
# install.packages('ggplot2')
library(ggplot2)
p <- ggplot(l.out$df.tickers, aes(x = ref.date, y = price.close))
p <- p + geom_line()
p <- p + facet_wrap(~ticker, scales = 'free_y') 
print(p)


# price matrix
prcmat = matrix(l.out$df.tickers$price.close,ncol = 3)
plot(prcmat[,1],type="l",col="blue",xlab="Day", ylab="Daily prices", main="FB daily prices")
# linear returns
linret<-prcmat[-1,]/prcmat[-nrow(prcmat),] - 1
plot(linret[,1],type="l",col="blue",ylab="FB Daily Return", xlab="Day",main="Daily Returns")

# log returns
logret<-log(prcmat[-1,]) - log(prcmat[-nrow(prcmat), ])
## or recover from linear return
logret<-log(1+linret[,1])
cumret_log<-cumsum(logret)
plot(c(1,exp(cumret_log)),type="l",col="blue",xlab="Day", ylab="Cumulative Return", main="Cumulative Daily Returns by log returns")

## recover prices
cumret <- cumprod(1+linret[,1])
plot(c(1,cumret),type="l",col="blue",xlab="Day", ylab="Cumulative Return", main="Cumulative Daily Returns")

## portfolio math
mu = colMeans(linret) 
Sigma = cov(linret)
w = matrix(1/3*c(1,1,1),ncol =1)


mu_p = t(w)%*%mu
sigma_p<-sqrt(t(w)%*%Sigma%*%w) 
R_f = 0.0005
SR_p = (mu_p-R_f)/sigma_p
